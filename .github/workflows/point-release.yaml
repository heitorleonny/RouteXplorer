name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x  # Substitua '3.x' pela vers√£o desejada do Python

      - name: Install Dependencies
        run: pip install --upgrade setuptools wheel

      - name: Check if version changed
        id: check_version
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep setup.py || echo "::set-output name=version_changed::false"
          echo "::set-output name=version_changed::true"

      - name: Build Distribution
        run: python setup.py sdist bdist_wheel
        if: steps.check_version.outputs.version_changed == 'true'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Release ${{ steps.get_version.outputs.version }}
            Add release notes or additional information here.
          draft: false
          prerelease: false
        if: steps.check_version.outputs.version_changed == 'true'

      - name: Upload Distribution
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*
          asset_name: routexplorer-${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
        if: steps.check_version.outputs.version_changed == 'true'
